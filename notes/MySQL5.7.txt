CentOS7下安装MySQL5.7

谢晓峰 发布于 1个月前，共有 0 条评论

一、下载MySQL5.7的yum源文件

网址：http://dev.mysql.com/downloads/repo/yum/

[root@me~]# wget http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm
二、安装下载的yum源

[root@me~]# rpm -Uvh mysql57-community-release-el7-7.noarch.rpm
三、yum安装MySQL

[root@me~]# yum install mysql-community-server
mysql5.7安装完成后会初始化一个root用户的默认密码

查找默认密码(当前默认密码是“/(=0RucLq*,I”)：

[root@me ~]# grep 'temporary password' /var/log/mysqld.log
2015-11-10T11:57:30.004110Z 1 [Note] A temporary password is generated for root@localhost: /(=0RucLq*,I
四、启动MySQL服务

[root@me~]# service mysqld start
五、执行MySQL的安全配置向导“mysql_secure_installation”命令

执行该命令前必须先启动mysql服务不然提示：

Error: Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' 

[root@me~]# mysql_secure_installation
Securing the MySQL server deployment.

Enter password for user root: <——输入上面安装mysql时初始化的root密码（“/(=0RucLq*,I”）

The existing password for the user account root has expired. Please set a new password.<——提示安装mysql时初始化的root密码已过期需要重新设置

New password: <——输入新的root密码（注意：密码至少8位字符，且必须包含大小写和特殊字符，不然在输完重复密码后提示密码不符合要求）

Re-enter new password: <——重复新的root密码

Estimated strength of the password: 100 <——提示密码强度为100

Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : y

By default, a MySQL installation has an anonymous user,

allowing anyone to log into MySQL without having to have

a user account created for them. This is intended only for

testing, and to make the installation go a bit smoother.

You should remove them before moving into a production

environment.

Remove anonymous users? (Press y|Y for Yes, any other key for No) : y<——是否删除匿名用户

Success.

Normally, root should only be allowed to connect from

'localhost'. This ensures that someone cannot guess at

the root password from the network.

Disallow root login remotely? (Press y|Y for Yes, any other key for No) : y<——是否禁止root远程登录

Success.

By default, MySQL comes with a database named 'test' that

anyone can access. This is also intended only for testing,

and should be removed before moving into a production

environment.

Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y<——是否删除test数据库

 - Dropping test database...

Success.

 - Removing privileges on test database...

Success.

Reloading the privilege tables will ensure that all changes

made so far will take effect immediately.

Reload privilege tables now? (Press y|Y for Yes, any other key for No) : 

 ... skipping.

All done!

成功执行完“mysql_secure_installation”命令后MySQL5.7就安装成功了







/**********************************************************************************************************/
/***********************************/

MYSQL数据库管理之权限管理

一、MYSQL权限简介
关于mysql的权限简单的理解就是mysql允许你做你权利以内的事情,不可以越界。比如只允许你执行select操作，那么你就不能执行update操作。只允许你从某台机器上连接mysql，那么你就不能从除那台机器以外的其他机器连接mysql。
那么MYSQL的权限是如何实现的呢？这就要说到mysql的两阶段的验证，下面详细来介绍：第一阶段：服务器首先会检查你是否允许连接。因为创建用户的时候会加上主机限制，可以限制成本地、某个IP、某个IP段、以及任何地方等，只允许你从配置的指定地方登录。后面在实战的时候会详细说关于主机的限制。第二阶段：如果你能连接，MYSQL会检查你发出的每个请求，看你是否有足够的权限实施它。比如你要更新某个表、或者查询某个表，MYSQL会检查你对哪个表或者某个列是否有权限。再比如，你要运行某个存储过程，MYSQL会检查你对存储过程是否有执行权限等。
MYSQL到底都有哪些权限呢？从官网复制一个表来看看：
权限					权限级别						权限说明
CREATE					数据库、表或索引				创建数据库、表或索引权限
DROP					数据库或表						删除数据库或表权限
GRANT OPTION			数据库、表或保存的程序			赋予权限选项
REFERENCES				数据库或表						
ALTER					表								更改表，比如添加字段、索引等
DELETE					表								删除数据权限
INDEX					表								索引权限
INSERT					表								插入权限
SELECT					表								查询权限
UPDATE					表								更新权限
CREATE VIEW				视图							创建视图权限
SHOW VIEW				视图							查看视图权限
ALTER ROUTINE			存储过程						更改存储过程权限
CREATE ROUTINE			存储过程						创建存储过程权限
EXECUTE					存储过程						执行存储过程权限
FILE					服务器主机上的文件访问			文件访问权限
CREATE TEMPORARY TABLES	服务器管理						创建临时表权限
LOCK TABLES				服务器管理						锁表权限
CREATE USER				服务器管理						创建用户权限
PROCESS					服务器管理						查看进程权限
RELOAD					服务器管理						执行flush-hosts, flush-logs, flush-privileges, flush-status, flush-tables, flush-threads, refresh, reload等命令的权限
REPLICATION CLIENT 		服务器管理						复制权限
REPLICATION SLAVE		服务器管理						复制权限
SHOW DATABASES			服务器管理						查看数据库权限
SHUTDOWN   				服务器管理						关闭数据库权限
SUPER					服务器管理						执行kill线程权限
 
MYSQL的权限如何分布，就是针对表可以设置什么权限，针对列可以设置什么权限等等，这个可以从官方文档中的一个表来说明：
权限分布
可能的设置的权限
表权限
'Select', 'Insert', 'Update', 'Delete', 'Create', 'Drop', 'Grant', 'References', 'Index', 'Alter'
列权限
'Select', 'Insert', 'Update', 'References'
过程权限
'Execute', 'Alter Routine', 'Grant'
针对权限这部分，最主要的是要知道MYSQL是如何验证的（两阶段验证），以及mysql各个权限是做什么用的，以及那些权限用在什么地方(表or列？)。如果这些把握了那么MYSQL权限对你来说就是小菜一碟了，只要看一下后面的权限管理就可以融会贯通了。
        
二、MYSQL权限经验原则
权限控制主要是出于安全因素，因此需要遵循一下几个经验原则：
1.  只授予能满足需要的最小权限，防止用户干坏事。哈哈。比如用户只是需要查询，那就只给select权限就可以了，不要给用户赋予update、insert或者delete权限。
2.  创建用户的时候限制用户的登录主机，一般是限制成指定IP或者内网IP段。
3.  初始化数据库的时候删除没有密码的用户。安装完数据库的时候会自动创建一些用户，这些用户默认没有密码。
4.  为每个用户设置满足密码复杂度的密码。
5.  定期清理不需要的用户。回收权限或者删除用户。
 
三、MYSQL权限实战
1.  GRANT命令使用说明
先来看一个例子，创建一个只允许从本地登录的超级用户feihong，并允许将权限赋予别的用户，密码为test@feihong.111
GRANT ALL PRIVILEGES ON *.* TO feihong@'localhost' IDENTIFIED BY 'test@feihong.111' WITH GRANT OPTION;
GRANT命令说明：
ALL PRIVILEGES 是表示所有权限，你也可以使用select、update等权限提到的权限。
ON 用来指定权限针对哪些库和表。
*.* 中前面的*号用来指定数据库名，后面的*号用来指定表名。
TO 表示将权限赋予某个用户。
feihong@'localhost' 表示feihong用户，@后面接限制的主机，可以是IP、IP段、域名以及%，%表示任何地方。注意：这里%有的版本不包括本地，以前碰到过给某个用户设置了%允许任何地方登录，但是在本地登录不了，这个和版本有关系，遇到这个问题再加一个localhost的用户就可以了。
IDENTIFIED BY 指定用户的登录密码。
WITH GRANT OPTION 这个选项表示该用户可以将自己拥有的权限授权给别人。注意：经常有人在创建操作用户的时候不指定WITH GRANT OPTION选项导致后来该用户不能使用GRANT命令创建用户或者给其他用户授权。
备注：可以使用GRANT重复给用户添加权限，权限叠加，比如你先给用户添加了一个select权限，然后又给用户添加了一个insert权限，那么该用户就同时拥有了select和insert权限。
2.  创建一个超级用户
创建一个只允许从本地登录的超级用户feihong，并允许将权限赋予别的用户，密码为test@feihong.111
GRANT ALL PRIVILEGES ON *.* TO feihong@'localhost' IDENTIFIED BY 'test@feihong.111' WITH GRANT OPTION;
3.   创建一个网站用户(程序用户)
创建一个一般的程序用户，这个用户可能只需要SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES等权限如果有存储过程还需要加上EXECUTE权限，一般是指定内网网段192.168.100网段。
GRANT  USAGE,SELECT, INSERT, UPDATE, DELETE, SHOW VIEW ,CREATE TEMPORARY TABLES,EXECUTE ON `test`.* TO webuser@'192.168.100.%' IDENTIFIED BY  'test@feihong.111';
4.  创建一个普通用户(仅有查询权限)
GRANT USAGE,SELECT ON `test`.* TO public@'192.168.100.%' IDENTIFIED BY  'public@feihong.111';
5.  刷新权限
使用这个命令使权限生效，尤其是你对那些权限表user、db、host等做了update或者delete更新的时候。以前遇到过使用grant后权限没有更新的情况，大家可以养成习惯，只要对权限做了更改就使用FLUSH PRIVILEGES命令来刷新权限。
FLUSH PRIVILEGES;
6.  查看权限
使用如下命令可以方便的查看到某个用户的权限：
SHOW GRANTS FOR 'webuser'@'192.168.100.%';
7.  回收权限
将前面创建的webuser用户的DELETE权限回收，使用如下命令
REVOKE DELETE ON test.* FROM 'webuser'@'192.168.100.%';
8.  删除用户
注意删除用户不要使用DELETE直接删除，因为使用DELETE删除后用户的权限并未删除，新建同名用户后又会继承以前的权限。正确的做法是使用DROP USER命令删除用户，比如要删除'webuser'@'192.168.100.%'用户采用如下命令：
DROP USER 'webuser'@'192.168.100.%';
        
大家可以采用percona-toolkit工具中的pt-show-grants工具来辅助管理mysql权限。具体使用见博文http://blog.chinaunix.net/uid-20639775-id-3207926.html







将mysql目录下bin目录中的mysql.exe放到C:\WINDOWS下，可以执行以下命令

连接：mysql -h主机地址 -u用户名 －p用户密码 （注:u与root可以不用加空格，其它也一样） 
断开：exit （回车） 


创建授权：grant select on 数据库.* to 用户名@登录主机 identified by \"密码\" 
修改密码：mysqladmin -u用户名 -p旧密码 password 新密码 
删除授权: revoke select,insert,update,delete om *.* from test2@localhost; 


显示数据库：show databases; 
显示数据表：show tables; 
显示表结构：describe 表名; 


创建库：create database 库名; 
删除库：drop database 库名; 
使用库：use 库名; 


创建表：create table 表名 (字段设定列表); 
删除表：drop table 表名; 
修改表：alter table t1 rename t2 
查询表：select * from 表名; 
清空表：delete from 表名; 
备份表: mysqlbinmysqldump -h(ip) -uroot -p(password) databasename tablename > tablename.sql 
恢复表: mysqlbinmysql -h(ip) -uroot -p(password) databasename tablename < tablename.sql（操作前先把原来表删除） 


增加列：ALTER TABLE t2 ADD c INT UNSIGNED NOT NULL AUTO_INCREMENT,ADD INDEX (c); 
修改列：ALTER TABLE t2 MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20); 
删除列：ALTER TABLE t2 DROP COLUMN c; 


备份数据库：mysql\bin\mysqldump -h(ip) -uroot -p(password) databasename > database.sql













